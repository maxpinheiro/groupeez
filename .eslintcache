[{"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/index.js":"1","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/profiles/ProfilePage.js":"2","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/details/DetailsPage.js":"3","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/services/ListenerService.js":"4","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/App.js":"5","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/RegisterPage.js":"6","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/details/ReviewSection.js":"7","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/reducers/SpotifyReducer.js":"8","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/MiddleTier.js":"9","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/details/AlbumSection.js":"10","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/profiles/ArtistSection.js":"11","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/profiles/ListenerSection.js":"12","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/details/PostSection.js":"13","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/reportWebVitals.js":"14","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/services/ReviewService.js":"15","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/search/SearchPage.js":"16","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/LoginPage.js":"17","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/services/PostService.js":"18","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/services/ArtistService.js":"19","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/search/ReviewResults.js":"20","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/search/ArtistResults.js":"21","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/search/PostResults.js":"22","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/search/ListenerResults.js":"23","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/details/SongSection.js":"24","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/services/SpotifyService.js":"25","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/services/UserService.js":"26","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/search/SongResults.js":"27","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/details/ReviewCreator.js":"28","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/profiles/PostCreator.js":"29","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/services/SongService.js":"30","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/reducers/DetailsReducer.js":"31","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/reducers/ProfileReducer.js":"32","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/reducers/SearchReducer.js":"33","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/search/AlbumResults.js":"34","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/HomePage.js":"35"},{"size":914,"mtime":1607411505072,"results":"36","hashOfConfig":"37"},{"size":11068,"mtime":1607990290199,"results":"38","hashOfConfig":"37"},{"size":2094,"mtime":1607983214135,"results":"39","hashOfConfig":"37"},{"size":730,"mtime":1607822373041,"results":"40","hashOfConfig":"37"},{"size":2551,"mtime":1607993912642,"results":"41","hashOfConfig":"37"},{"size":5295,"mtime":1607981888894,"results":"42","hashOfConfig":"37"},{"size":4491,"mtime":1607972907974,"results":"43","hashOfConfig":"37"},{"size":2097,"mtime":1607823723055,"results":"44","hashOfConfig":"37"},{"size":1958,"mtime":1608004825532,"results":"45","hashOfConfig":"37"},{"size":4710,"mtime":1607983214124,"results":"46","hashOfConfig":"37"},{"size":10002,"mtime":1607988293661,"results":"47","hashOfConfig":"37"},{"size":10959,"mtime":1607997832329,"results":"48","hashOfConfig":"37"},{"size":3745,"mtime":1607989191001,"results":"49","hashOfConfig":"37"},{"size":362,"mtime":1606061760546,"results":"50","hashOfConfig":"37"},{"size":1474,"mtime":1607996143818,"results":"51","hashOfConfig":"37"},{"size":7459,"mtime":1607980532527,"results":"52","hashOfConfig":"37"},{"size":3597,"mtime":1607412585918,"results":"53","hashOfConfig":"37"},{"size":1383,"mtime":1608003804687,"results":"54","hashOfConfig":"37"},{"size":924,"mtime":1608003745987,"results":"55","hashOfConfig":"37"},{"size":1577,"mtime":1607892584567,"results":"56","hashOfConfig":"37"},{"size":3152,"mtime":1608004898369,"results":"57","hashOfConfig":"37"},{"size":2273,"mtime":1607983560973,"results":"58","hashOfConfig":"37"},{"size":2329,"mtime":1607983550129,"results":"59","hashOfConfig":"37"},{"size":6130,"mtime":1607988369156,"results":"60","hashOfConfig":"37"},{"size":2377,"mtime":1608004536808,"results":"61","hashOfConfig":"37"},{"size":1934,"mtime":1608003827030,"results":"62","hashOfConfig":"37"},{"size":4265,"mtime":1607983415378,"results":"63","hashOfConfig":"37"},{"size":11625,"mtime":1607996111509,"results":"64","hashOfConfig":"37"},{"size":9557,"mtime":1607993492059,"results":"65","hashOfConfig":"37"},{"size":1236,"mtime":1607822195498,"results":"66","hashOfConfig":"37"},{"size":1532,"mtime":1607983001231,"results":"67","hashOfConfig":"37"},{"size":1016,"mtime":1607987089257,"results":"68","hashOfConfig":"37"},{"size":1389,"mtime":1607979469566,"results":"69","hashOfConfig":"37"},{"size":2973,"mtime":1607982701068,"results":"70","hashOfConfig":"37"},{"size":8833,"mtime":1607996649901,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"19k4leu",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"77"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"114"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/index.js",[],["155","156"],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/profiles/ProfilePage.js",[],["157","158"],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/details/DetailsPage.js",["159","160","161"],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/services/ListenerService.js",["162"],"const findAllListeners = () => {\n    return fetch('http://localhost:4000/api/listeners')\n        .then(response => response.json());\n};\n\nconst findListenerById = (listenerId) => {\n    return fetch(`http://localhost:4000/api/listeners/${listenerId}`)\n        .then(response => response.json());\n};\n\nconst createListener = (listener) => {\n};\n\nconst updateListener = (listenerId, newListener) => {\n\n};\n\nconst deleteListener = (listenerId, newListener) => {\n\n};\n\nconst queryListener = (query) => {\n    return fetch(`http://localhost:4000/api/listeners/search/${query}`)\n        .then(response => response.json());\n};\n\nexport default {findAllListeners, findListenerById, createListener, updateListener, deleteListener, queryListener};\n","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/App.js",["163"],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/RegisterPage.js",["164","165"],"import React from 'react';\nimport {connect} from 'react-redux';\nimport {Link, Redirect} from 'react-router-dom';\n\nimport userService from '../services/UserService';\n\nclass Register extends React.Component {\n    state = {\n        username: \"\",\n        password: \"\",\n        role: \"\",\n        spotifyId: null,\n        error: \"\"\n    };\n\n    componentDidMount() {\n    }\n\n    register = () => {\n        const spotifyId = this.state.spotifyId && this.state.spotifyId !== '' ? this.state.spotifyId : null;\n        const newUser = {username: this.state.username, password: this.state.password, role: this.state.role, spotifyId};\n        userService.register(newUser)\n            .then(user => {\n                if (user.error) {\n                    const error = 'Username already exists.';\n                    this.setState(prevState => ({\n                        ...prevState,\n                        error\n                    }))\n                } else {\n                    this.props.history.push('/authorize/profile');\n                }\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <p className=\"h2\">Create a new account</p>\n                <div>\n                    <div className=\"row\">\n                        <p className=\"col-sm-2 col-lg-1\"></p>\n                        <div className=\"col-sm-10 col-lg-11\">\n                            {this.state.error !== \"\" &&\n                            <p className=\"p-2 rounded border-secondary text-danger\">{this.state.error}</p>}\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"username\" className=\"col-sm-2 col-lg-1\">Username</label>\n                        <div className=\"input-group col-sm-10 col-lg-11\">\n                            <input onChange={(e) => this.setState(prevState => ({...prevState, username: e.target.value}))}\n                                   type=\"text\" className=\"form-control\" placeholder=\"username\"\n                                   id=\"usernameFld\"/>\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"password\" className=\"col-sm-2 col-lg-1\">Password</label>\n                        <div className=\"input-group col-sm-10 col-lg-11\">\n                            <input onChange={(e) => this.setState(prevState => ({...prevState, password: e.target.value}))}\n                                   type=\"text\" className=\"form-control\" placeholder=\"password\"\n                                   id=\"passwordFld\"/>\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"role\" className=\"col-sm-2 col-lg-1\">Role</label>\n                        <div className=\"input-group col-sm-10 col-lg-11\">\n                            <div className=\"form-check mr-3\">\n                                <input className=\"form-check-input\" type=\"radio\" value=\"listener\" name=\"roleInput\" id=\"listener\"\n                                       onChange={(e) => this.setState(prevState => ({...prevState, role: 'listener'}))}/>\n                                    <label className=\"form-check-label\">Listener</label>\n                            </div>\n                            <div className=\"form-check mr-3\">\n                                <input className=\"form-check-input\" type=\"radio\" value=\"artist\" id=\"artist\" name=\"roleInput\"\n                                       onChange={(e) => this.setState(prevState => ({...prevState, role: 'artist'}))}/>\n                                    <label className=\"form-check-label\">Artist</label>\n                            </div>\n                            {\n                                this.state.role === 'artist' &&\n                                <div className=\"d-flex ml-5\">\n                                    <p className=\"d-inline mr-2\">Verified on Spotify?</p>\n                                    <div className=\"d-flex\">\n                                        <label className=\"d-inline\">Spotify ID: </label>\n                                        <input onChange={(e) => this.setState(prevState => ({...prevState, spotifyId: e.target.value}))}\n                                               type=\"text\" className=\"form-control d-inline ml-3\" placeholder=\"spotify id\" id=\"spotifyIdFld\"/>\n                                    </div>\n\n                                </div>\n                            }\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <p className=\"col-sm-2 col-lg-1\"></p>\n                        <div className=\"col-sm-10 col-lg-11\">\n                            <button onClick={this.register} className=\"btn btn-primary btn-block\">Register</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst stateToProperty = (state) => ({\n    //cookies: ownProps.cookies\n})\n\nconst propertyToDispatchMapper = (dispatch) => ({\n})\n\nconst RegisterPage = connect(stateToProperty, propertyToDispatchMapper)(Register);\nexport default RegisterPage;",["166","167"],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/details/ReviewSection.js",[],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/reducers/SpotifyReducer.js",["168"],"import { Reducer } from 'redux';\n\n/*\ntype songModel = {\n    name: string,\n    artists: {name: string}[],\n    album: {\n        images: {url: string}[]\n    }\n}; */\nconst initialState = {\n    authCode: '',\n    accessToken: '',\n    refreshToken: '',\n    searchQuery: '',\n    songs: [],\n    albums: [],\n    artists: [],\n    listeners: [],\n    posts: [],\n    reviews: [],\n    resultSong: {name: '', artists: [], album: {images: [{url: ''}]}}\n};\n\nconst spotifyReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case \"AUTHORIZATION_CODE\":\n            return {\n                ...state,\n                authCode: action.authCode\n            }\n        case \"TOKENS\":\n            return {\n                ...state,\n                accessToken: action.accessToken,\n                refreshToken: action.refreshToken\n            }\n        case \"SEARCH_SONGS\":\n            return {\n                ...state,\n                songs: action.songs,\n                searchQuery: action.query\n            }\n        case \"RESULT_SONG\":\n            return {\n                ...state,\n                resultSong: action.song\n            }\n        case \"SEARCH_ALBUMS\":\n            return {\n                ...state,\n                albums: action.albums,\n                searchQuery: action.query\n            }\n        case \"SEARCH_ARTISTS\":\n            return {\n                ...state,\n                artists: action.artists,\n                searchQuery: action.query\n            }\n        case \"SEARCH_LISTENERS\":\n            return {\n                ...state,\n                listeners: action.listeners,\n                searchQuery: action.query\n            }\n        case \"SEARCH_POSTS\":\n            return {\n                ...state,\n                posts: action.posts,\n                searchQuery: action.query\n            }\n        case \"SEARCH_REVIEWS\":\n            return {\n                ...state,\n                reviews: action.reviews,\n                searchQuery: action.query\n            }\n        default:\n            return state\n    }\n};\n\nexport default spotifyReducer;","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/MiddleTier.js",[],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/details/AlbumSection.js",[],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/profiles/ArtistSection.js",["169","170"],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/profiles/ListenerSection.js",[],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/details/PostSection.js",[],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/reportWebVitals.js",[],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/services/ReviewService.js",["171"],"const findAllReviews = () => {\n    return fetch('http://localhost:4000/api/reviews')\n        .then(response => response.json());\n};\n\nconst findReviewById = (reviewId) => {\n    return fetch(`http://localhost:4000/api/reviews/${reviewId}`)\n        .then(response => response.json());\n};\n\nconst createReview = (newReview, artistUser) => {\n    return fetch('http://localhost:4000/api/reviews', {\n        method: 'POST',\n        body: JSON.stringify({newReview, artistUser}),\n        headers: {\n            'content-type': 'application/json'\n        }\n    }).then(response => response.json());\n};\n\nconst updateReview = (reviewId, review) => {\n    return fetch(`http://localhost:4000/api/reviews/${reviewId}`, {\n        method: 'PUT',\n        body: JSON.stringify(review),\n        headers: {\n            'content-type': 'application/json'\n        }\n    }).then(response => response.json());\n};\n\nconst deleteReview = (reviewId, creatorId, artistUser) => {\n    return fetch(`http://localhost:4000/api/reviews/${reviewId}`, {\n        method: 'DELETE',\n        body: JSON.stringify({creatorId, artistUser}),\n        headers: {\n            'content-type': 'application/json'\n        }\n    }).then(response => response.json());\n};\n\nconst queryReview = (query) => {\n    return fetch(`http://localhost:4000/api/reviews/search/${query}`)\n        .then(response => response.json());\n};\n\nexport default {findAllReviews, findReviewById, createReview, updateReview, deleteReview, queryReview};","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/search/SearchPage.js",[],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/LoginPage.js",["172"],"import React from 'react';\nimport {connect} from 'react-redux';\nimport {Link, Redirect} from 'react-router-dom';\n\nimport userService from '../services/UserService';\n\nclass Login extends React.Component {\n    state = {\n        username: \"\",\n        password: \"\",\n        error: \"\"\n    };\n\n    componentDidMount() {\n    }\n\n    login = () => {\n        userService.login(this.state.username, this.state.password)\n            .then(user => {\n                if (user.error) {\n                    const error = user.error === \"Invalid username\" ? \"Sorry, we can't find an account with this username.\" : \"Incorrect password.\";\n                    this.setState(prevState => ({\n                        ...prevState,\n                        error\n                    }))\n                } else {\n                    //this.props.cookies.set('currentUser', user.id, {path: '/'});\n                    this.props.history.push('/profile');\n                }\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <p className=\"h2\">Login</p>\n                <div>\n                    <div className=\"row\">\n                        <p className=\"col-sm-2 col-lg-1\"></p>\n                        <div className=\"col-sm-10 col-lg-11\">\n                            {this.state.error !== \"\" &&\n                            <p className=\"p-2 rounded border-secondary text-danger\">{this.state.error}</p>}\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"username\" className=\"col-sm-2 col-lg-1\">Username</label>\n                        <div className=\"input-group col-sm-10 col-lg-11\">\n                            <input onChange={(e) => this.setState(prevState => ({...prevState, username: e.target.value}))}\n                                type=\"text\" className=\"form-control\" placeholder=\"username\"\n                                   id=\"usernameFld\"/>\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"password\" className=\"col-sm-2 col-lg-1\">Password</label>\n                        <div className=\"input-group col-sm-10 col-lg-11\">\n                            <input onChange={(e) => this.setState(prevState => ({...prevState, password: e.target.value}))}\n                                   type=\"text\" className=\"form-control\" placeholder=\"password\"\n                                   id=\"passwordFld\"/>\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <p className=\"col-sm-2 col-lg-1\"></p>\n                        <div className=\"col-sm-10 col-lg-11\">\n                            <button onClick={this.login} className=\"btn btn-primary btn-block\">Login</button>\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <p className=\"d-inline\">Don't have an account?</p>\n                                    <Link to=\"/register\" className=\"mx-3\">Sign Up</Link>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst stateToProperty = (state) => ({\n    //cookies: ownProps.cookies\n})\n\nconst propertyToDispatchMapper = (dispatch) => ({\n})\n\nconst LoginPage = connect(stateToProperty, propertyToDispatchMapper)(Login);\nexport default LoginPage;",["173","174"],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/services/PostService.js",["175","176"],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/services/ArtistService.js",["177","178"],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/search/ReviewResults.js",["179"],"import {Link} from \"react-router-dom\";\nimport queryString from \"querystring\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\n\nclass Review extends React.Component {\n    render() {\n        return (\n\n            <div className=\"my-3\">\n                <h4>Results</h4>\n                <table className=\"table table-striped\">\n                    <thead>\n                    <tr>\n                        <th>Title</th>\n                        <th>Creator</th>\n                        <th>Type</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        this.props.reviews.map(review =>\n                            <tr key={review.id}>\n                                <th>\n                                    <Link to={`/details/reviews/${review.id}`}>{review.title}</Link>\n                                </th>\n                                <th>\n                                    <Link to={`/profile/${review.creatorId}`}>{review.creator}</Link>\n                                </th>\n                                <th>\n                                    Review\n                                </th>\n                            </tr>\n                        )\n                    }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nconst stateToProperty = (state) => ({\n});\n\nconst propertyToDispatchMapper = (dispatch) => ({\n});\n\nconst ReviewResults = connect(stateToProperty, propertyToDispatchMapper)(Review);\nexport default ReviewResults;","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/search/ArtistResults.js",[],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/search/PostResults.js",[],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/search/ListenerResults.js",[],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/details/SongSection.js",[],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/services/SpotifyService.js",["180"],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/services/UserService.js",["181","182"],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/search/SongResults.js",[],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/details/ReviewCreator.js",["183"],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/profiles/PostCreator.js",["184"],"import React from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport queryString from \"querystring\";\n\nimport postService from \"../../services/PostService\";\nimport userService from '../../services/UserService';\n\nclass Post extends React.Component {\n    state = {\n        post: {\n            type: \"\",\n            artist: \"\",\n            artistId: \"\",\n            title: \"\",\n            text: \"\"\n        },\n        error: '',\n        currentUser: {_id: ''},\n        postType: ''\n    };\n\n    componentDidMount() {\n        const postType = this.props.match.params.postType;\n        const postId = this.props.match.params.postId;\n\n        userService.getCurrentUser()\n            .then(currentUser => {\n                if (!currentUser.error) {\n                    this.setState(prevState => ({\n                        ...prevState,\n                        currentUser,\n                        postType\n                    }))\n                }\n            });\n\n        if (postType === 'edit' && postId) {\n            postService.findPostById(postId)\n                .then(post => {\n                    if (!post.error) {\n                        document.getElementById(post.type).checked = true;\n                        this.setState(prevState => ({\n                            ...prevState,\n                            post,\n                            postType\n                        }))\n                    } else {\n                        this.setState(prevState => ({\n                            ...prevState,\n                            error: 'Cannot find post with id.'\n                        }))\n                    }\n                })\n        } else if (postType === 'create') {\n            this.setState(prevState => ({\n                ...prevState,\n                post: {type: \"\",\n                    artist: \"\",\n                    artistId: \"\",\n                    title: \"\",\n                    text: \"\"},\n                postType\n            }))\n        }\n    }\n\n    createPost = () => {\n        if (this.state.post.type === '' || this.state.post.title === '' || this.state.post.text === '') {\n            this.setState(prevState => ({\n                ...prevState,\n                error: \"Your post must have a type, title, and body.\"\n            }))\n        } else {\n            const post = {\n                type: this.state.post.type,\n                artist: this.state.currentUser.username,\n                artistId: this.state.currentUser._id,\n                title: this.state.post.title,\n                text: this.state.post.text\n            }\n            //console.log(post);\n            postService.createPost(post)\n                .then(newPost => {\n                    this.props.history.push(`/details/posts/${newPost._id}`);\n                })\n        }\n    }\n\n    savePost = () => {\n        if (this.state.post.type === '' || this.state.post.title === '' || this.state.post.text === '') {\n            this.setState(prevState => ({\n                ...prevState,\n                error: \"Your post must have a type, title, and body.\"\n            }))\n        } else {\n            const post = {\n                _id: this.state.post._id,\n                type: this.state.post.type,\n                artist: this.state.currentUser.username,\n                artistId: this.state.currentUser._id,\n                title: this.state.post.title,\n                text: this.state.post.text\n            }\n            console.log(post);\n            postService.updatePost(post._id, post)\n                .then(status => {\n                    this.props.history.push(`/details/posts/${post._id}`);\n                })\n        }\n    }\n\n    deletePost = () => {\n        if (this.state.post._id !== '') {\n            postService.deletePost(this.state.post._id, this.state.currentUser._id).then(status => {\n                this.props.history.push('/profile');\n            })\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <span>\n                    {\n                        this.state.postType === 'edit' ?\n                            <p className=\"h3 d-inline mr-2\">Edit your Post</p> :\n                            <p className=\"h3 d-inline mr-2\">Create a Post</p>\n                    }\n                </span>\n                {\n                    (this.state.currentUser._id !== '') &&\n                    <div className=\"border border-2 border-secondary mt-2\">\n                        <div className=\"m-2\">\n                            {\n                                this.state.error !== \"\" &&\n                                <p className=\"pt-2 pl-2 rounded border-secondary text-danger\">{this.state.error}</p>\n                            }\n                            <div className=\"row\">\n                                <div className=\"col form-group row container-fluid m-2\">\n                                    <label className=\"form-check-label font-weight-bold\">Type: </label>\n                                    <div className=\"form-check mx-3\">\n                                        <input className=\"form-check-input\" type=\"radio\" value=\"tour\" name=\"roleInput\" id=\"listener\"\n                                               onChange={(e) => this.setState(prevState => ({...prevState, post: {...prevState.post, type: e.target.value}}))}/>\n                                        <label className=\"form-check-label\">Tour</label>\n                                    </div>\n                                    <div className=\"form-check mr-3\">\n                                        <input className=\"form-check-input\" type=\"radio\" value=\"message\" id=\"message\" name=\"roleInput\"\n                                               onChange={(e) => this.setState(prevState => ({...prevState, post: {...prevState.post, type: e.target.value}}))}/>\n                                        <label className=\"form-check-label\">Message</label>\n                                    </div>\n                                    <div className=\"input-group\">\n                                        <input onChange={(e) => this.setState(prevState => ({...prevState, post: {...prevState.post, title: e.target.value}}))}\n                                               type=\"text\" className=\"form-control\" placeholder=\"post title\" value={this.state.post.title}\n                                               id=\"titleFld\"/>\n                                    </div>\n                                    <div className=\"input-group\">\n                                    <textarea onChange={(e) => this.setState(prevState => ({...prevState, post: {...prevState.post, text: e.target.value}}))}\n                                              className=\"form-control\" placeholder=\"post text\" rows=\"3\" value={this.state.post.text}\n                                              id=\"titleFld\"/>\n                                    </div>\n                                </div>\n                                <div className=\"col mt-2 border\">\n                                    <div className=\"m-2\">\n                                        <p className=\"h3\">\n                                            {this.state.post.title}\n                                        </p>\n                                        <p className=\"text-body\">\n                                            {this.state.post.text}\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                            {\n                                this.state.postType === 'edit' ?\n                                <button onClick={this.savePost} className=\"btn btn-primary mx-2\">\n                                    Save Post\n                                </button> :\n                                <button onClick={this.createPost} className=\"btn btn-primary mx-2\">\n                                    Create Post\n                                </button>\n                            }\n                            <Link to=\"/profile\" className=\"btn btn-warning mx-2\">\n                                Cancel\n                            </Link>\n                            {\n                                this.state.postType === 'edit' &&\n                                <button onClick={this.deletePost} className=\"btn btn-danger mx-2\">\n                                    Delete Post\n                                </button>\n                            }\n                        </div>\n                    </div>\n                }\n                {\n                    (this.state.currentUser._id === '' || this.state.currentUser.role !== 'artist') &&\n                    <div>\n                        <p>You must be logged in as an Artist to access posts.</p>\n                        <Link to=\"/login\">Login</Link>\n                    </div>\n                }\n                {\n                    (this.state.noSong && this.state.currentUser._id !== '') &&\n                    <div className=\"my-2\">\n                        <p className=\"d-inline\">We couldn't find any song with this ID. Try a different </p>\n                        <Link to=\"/search\" className=\"\">search.</Link>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nconst stateToProperty = (state) => ({\n})\n\nconst propertyToDispatchMapper = (dispatch) => ({\n})\n\nconst PostCreator = connect(stateToProperty, propertyToDispatchMapper)(Post);\nexport default PostCreator;","/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/services/SongService.js",["185"],"const findAllSongs = () => {\n    return fetch('http://localhost:4000/api/songs')\n        .then(response => response.json());\n};\n\nconst findSongById = (songId) => {\n    return fetch(`http://localhost:4000/api/songs/${songId}`)\n        .then(response => response.json());\n};\n\nconst createSong = (newSong) => {\n    return fetch('http://localhost:4000/api/songs', {\n        method: 'POST',\n        body: JSON.stringify(newSong),\n        headers: {\n            'content-type': 'application/json'\n        }\n    }).then(response => response.json());\n};\n\nconst updateSong = (songId, song) => {\n    return fetch(`http://localhost:4000/api/songs/${songId}`, {\n        method: 'PUT',\n        body: JSON.stringify(song),\n        headers: {\n            'content-type': 'application/json'\n        }\n    }).then(response => response.json());\n};\n\nconst deleteSong = (songId) => {\n    return fetch(`http://localhost:4000/api/songs/${songId}`, {\n        method: 'DELETE'\n    }).then(response => response.json());\n};\n\nconst querySong = (query) => {\n    return fetch(`http://localhost:4000/api/songs/search/${query}`)\n        .then(response => response.json());\n}\n\nexport default {findAllSongs, findSongById, createSong, updateSong, deleteSong, querySong};",["186","187"],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/reducers/DetailsReducer.js",[],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/reducers/ProfileReducer.js",[],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/reducers/SearchReducer.js",[],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/search/AlbumResults.js",["188"],"/Users/maxpinheiro/Desktop/workspace/groupeez-demo/src/components/HomePage.js",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"189","replacedBy":"193"},{"ruleId":"191","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":3,"column":9,"nodeType":"197","messageId":"198","endLine":3,"endColumn":13},{"ruleId":"195","severity":1,"message":"199","line":4,"column":8,"nodeType":"197","messageId":"198","endLine":4,"endColumn":19},{"ruleId":"195","severity":1,"message":"200","line":6,"column":8,"nodeType":"197","messageId":"198","endLine":6,"endColumn":19},{"ruleId":"201","severity":1,"message":"202","line":27,"column":1,"nodeType":"203","endLine":27,"endColumn":116},{"ruleId":"195","severity":1,"message":"204","line":16,"column":7,"nodeType":"197","messageId":"198","endLine":16,"endColumn":18},{"ruleId":"195","severity":1,"message":"196","line":3,"column":9,"nodeType":"197","messageId":"198","endLine":3,"endColumn":13},{"ruleId":"195","severity":1,"message":"205","line":3,"column":15,"nodeType":"197","messageId":"198","endLine":3,"endColumn":23},{"ruleId":"189","replacedBy":"206"},{"ruleId":"191","replacedBy":"207"},{"ruleId":"195","severity":1,"message":"208","line":1,"column":10,"nodeType":"197","messageId":"198","endLine":1,"endColumn":17},{"ruleId":"195","severity":1,"message":"199","line":5,"column":8,"nodeType":"197","messageId":"198","endLine":5,"endColumn":19},{"ruleId":"209","severity":1,"message":"210","line":195,"column":50,"nodeType":"211","endLine":195,"endColumn":73},{"ruleId":"201","severity":1,"message":"202","line":46,"column":1,"nodeType":"203","endLine":46,"endColumn":104},{"ruleId":"195","severity":1,"message":"205","line":3,"column":15,"nodeType":"197","messageId":"198","endLine":3,"endColumn":23},{"ruleId":"189","replacedBy":"212"},{"ruleId":"191","replacedBy":"213"},{"ruleId":"195","severity":1,"message":"214","line":2,"column":7,"nodeType":"197","messageId":"198","endLine":2,"endColumn":12},{"ruleId":"201","severity":1,"message":"202","line":49,"column":1,"nodeType":"203","endLine":49,"endColumn":92},{"ruleId":"195","severity":1,"message":"214","line":2,"column":7,"nodeType":"197","messageId":"198","endLine":2,"endColumn":12},{"ruleId":"201","severity":1,"message":"202","line":34,"column":1,"nodeType":"203","endLine":34,"endColumn":127},{"ruleId":"195","severity":1,"message":"200","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":19},{"ruleId":"201","severity":1,"message":"202","line":71,"column":1,"nodeType":"203","endLine":71,"endColumn":85},{"ruleId":"195","severity":1,"message":"214","line":2,"column":7,"nodeType":"197","messageId":"198","endLine":2,"endColumn":12},{"ruleId":"201","severity":1,"message":"202","line":61,"column":1,"nodeType":"203","endLine":61,"endColumn":129},{"ruleId":"215","severity":1,"message":"216","line":120,"column":20,"nodeType":"217","messageId":"218","endLine":120,"endColumn":21,"fix":"219"},{"ruleId":"195","severity":1,"message":"200","line":4,"column":8,"nodeType":"197","messageId":"198","endLine":4,"endColumn":19},{"ruleId":"201","severity":1,"message":"202","line":42,"column":1,"nodeType":"203","endLine":42,"endColumn":92},{"ruleId":"189","replacedBy":"220"},{"ruleId":"191","replacedBy":"221"},{"ruleId":"195","severity":1,"message":"200","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":19},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],["222"],["223"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'userService' is defined but never used.","'queryString' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'LandingPage' is assigned a value but never used.","'Redirect' is defined but never used.",["222"],["223"],"'Reducer' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["222"],["223"],"'root2' is assigned a value but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"224","text":"225"},["222"],["223"],"no-global-assign","no-unsafe-negation",[4287,4288],""]